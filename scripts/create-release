#!/bin/bash

set -eu

if [[ "$#" -ne 1 ]]; then
  echo "usage: $0 <version number (e.g. 0.2.0)>"
  exit 1
fi

readonly version=$1

if ! [[ "$version" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
  echo "usage: $0 <version number (e.g. 0.2.0)>"
  exit 1
fi

cd "$(dirname "$0")"/..

# bump version which is output by 'driving-time --version'
sed -E -e "s/(Version:[[:space:]]+)\"[0-9]+\.[0-9]+\.[0-9]+\",/\1\"$version\",/" \
  -i '' cmd/root.go

git add cmd/root.go
git commit -m "Bump driving-time to v$version"
git push

GPG_TTY=$(tty)
export GPG_TTY

git tag --sign v"$version"
git push origin v"$version"

# bundle HTML template files into the Go binary
packr2

env GOOS=darwin GOARCH=amd64 go build -o driving-time-"$version"-darwin-amd64
env GOOS=linux GOARCH=amd64 go build -o driving-time-"$version"-linux-amd64
env GOOS=windows GOARCH=amd64 go build -o driving-time-"$version"-windows-amd64.exe

packr2 clean

description=$(mktemp /tmp/description.XXXX)
echo -e "v$version\\n" > "$description"
echo -e "### Assets\\nsha256\\n\`\`\`" >> "$description"
shasum -a 256 driving-time-"$version"-* >> "$description"
echo '```' >> "$description"

hub release create \
  --browse \
  --attach driving-time-"$version"-darwin-amd64 \
  --attach driving-time-"$version"-linux-amd64 \
  --attach driving-time-"$version"-windows-amd64.exe \
  --file "$description" \
  v"$version"

rm "$description"
rm driving-time-"$version"-*
